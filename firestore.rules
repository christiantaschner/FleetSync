
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user belongs to a specific company and has a role
    function isCompanyMember(companyId, roles) {
      let userProfile = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return request.auth != null &&
             userProfile.companyId == companyId &&
             userProfile.role in roles;
    }
    
    // Helper function to check if the user is the owner of a document
    function isOwner(docData) {
        return request.auth.uid == docData.ownerId;
    }

    // Helper function to check if user is a super admin
    function isSuperAdmin() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super_admin';
    }

    // Companies: Only company owners or super admins can write. Anyone in the company can read.
    match /companies/{companyId} {
      allow read: if isCompanyMember(companyId, ['admin', 'technician', 'csr']) || isSuperAdmin();
      allow write: if isOwner(resource.data) || isSuperAdmin();
    }

    // Users: Users can read/write their own profile. Admins can update roles for users in their company.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isSuperAdmin();
      allow write: if request.auth.uid == userId;
      // Allow admins to update roles or remove users from their company
      allow update: if isCompanyMember(resource.data.companyId, ['admin']) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role', 'companyId', 'onboardingStatus']);
    }
    
    // Technicians: Only admins of the same company can create/update/delete. All company members can read.
    match /technicians/{technicianId} {
      allow read: if isCompanyMember(resource.data.companyId, ['admin', 'technician', 'csr']);
      allow create, update, delete: if isCompanyMember(request.resource.data.companyId, ['admin']) || isCompanyMember(resource.data.companyId, ['admin']);
    }

    // Jobs: Admins/CSRs can create/delete. Admins/CSRs can update. Technicians can only update specific fields.
    match /jobs/{jobId} {
      allow read: if isCompanyMember(resource.data.companyId, ['admin', 'technician', 'csr']);
      allow create, delete: if isCompanyMember(request.resource.data.companyId, ['admin', 'csr']);
      allow update: if isCompanyMember(resource.data.companyId, ['admin', 'csr']) || 
                      (isCompanyMember(resource.data.companyId, ['technician']) && request.auth.uid == resource.data.assignedTechnicianId &&
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'updatedAt', 'notes', 'photos', 'customerSignatureUrl', 'customerSignatureTimestamp', 'customerSatisfactionScore', 'isFirstTimeFix', 'reasonForFollowUp', 'breaks', 'checklistResults', 'enRouteAt', 'inProgressAt', 'completedAt']));
    }
    
    // Skills, Parts, Contracts, Equipment: Admins can manage these for their company.
    match /{collection}/{docId} where collection in ['skills', 'parts', 'contracts', 'equipment'] {
        allow read: if isCompanyMember(resource.data.companyId, ['admin', 'technician', 'csr']);
        allow create: if isCompanyMember(request.resource.data.companyId, ['admin']);
        allow update, delete: if isCompanyMember(resource.data.companyId, ['admin']);
    }

    // Profile Change Requests: Technicians create, Admins read/update.
    match /profileChangeRequests/{requestId} {
        allow read: if isCompanyMember(resource.data.companyId, ['admin', 'technician']);
        allow create: if isCompanyMember(request.resource.data.companyId, ['technician']) && request.auth.uid == request.resource.data.technicianId;
        allow update: if isCompanyMember(resource.data.companyId, ['admin']);
    }

    // Chat Messages: Senders can create. All company members can read job chats.
    match /chatMessages/{messageId} {
        allow read: if isCompanyMember(resource.data.companyId, ['admin', 'technician', 'csr']);
        allow create: if isCompanyMember(request.resource.data.companyId, ['admin', 'technician']) && request.auth.uid == request.resource.data.senderId;
    }
  }
}
