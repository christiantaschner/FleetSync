
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function getUserProfile(userId) {
      return get(/databases/$(database)/documents/users/$(userId));
    }
    
    function isSuperAdmin() {
      let userProfile = getUserProfile(request.auth.uid);
      return isSignedIn() && userProfile.data.role == 'super_admin';
    }
    
    function isCompanyAdmin(companyId) {
      let userProfile = getUserProfile(request.auth.uid);
      return isSignedIn() && userProfile.data.companyId == companyId && userProfile.data.role == 'admin';
    }

    function isCompanyMember(companyId) {
      let userProfile = getUserProfile(request.auth.uid);
      return isSignedIn() && userProfile.data.companyId == companyId;
    }
    
    function documentExists(path) {
      return exists(path);
    }
    
    // --- Collection Rules ---

    // Users can read/edit their own profile. Admins can manage users in their company.
    match /users/{userId} {
      allow read: if isUser(userId) || isSuperAdmin() || (documentExists(/databases/$(database)/documents/users/$(userId)) && isCompanyAdmin(get(/databases/$(database)/documents/users/$(userId)).data.companyId));
      allow create: if isUser(userId);
      allow update: if isUser(userId) || isSuperAdmin() || (documentExists(/databases/$(database)/documents/users/$(userId)) && isCompanyAdmin(get(/databases/$(database)/documents/users/$(userId)).data.companyId));
    }
    
    // Company data can be read by members, but only updated by admins.
    match /companies/{companyId} {
        allow read: if isCompanyMember(companyId) || isSuperAdmin();
        allow create, update: if isCompanyAdmin(companyId) || isSuperAdmin();
    }
    
    function isReadAuthorized(doc) {
        return isCompanyMember(doc.data.companyId) || isSuperAdmin();
    }
    
    function canWrite(docData) {
       let userRole = getUserProfile(request.auth.uid).data.role;
       return (isCompanyMember(docData.companyId) && (userRole == 'admin' || userRole == 'csr')) || isSuperAdmin();
    }

    match /jobs/{jobId} {
        allow read: if isReadAuthorized(resource);
        allow create: if canWrite(request.resource.data);
        allow update: if canWrite(request.resource.data) || (isCompanyMember(resource.data.companyId) && resource.data.assignedTechnicianId == request.auth.uid);
        allow delete: if isCompanyAdmin(resource.data.companyId) || isSuperAdmin();
    }

    match /technicians/{techId} {
        allow read: if isReadAuthorized(resource);
        allow create, update: if isCompanyAdmin(request.resource.data.companyId) || isSuperAdmin();
        allow delete: if isCompanyAdmin(resource.data.companyId) || isSuperAdmin();
    }

    match /skills/{skillId} {
        allow read: if isReadAuthorized(resource);
        allow create, update, delete: if isCompanyAdmin(request.resource.data.companyId) || isSuperAdmin();
    }

    match /parts/{partId} {
        allow read: if isReadAuthorized(resource);
        allow create, update, delete: if isCompanyAdmin(request.resource.data.companyId) || isSuperAdmin();
    }
    
    match /contracts/{contractId} {
        allow read: if isReadAuthorized(resource);
        allow create, update, delete: if isCompanyAdmin(request.resource.data.companyId) || isSuperAdmin();
    }

    match /equipment/{equipmentId} {
        allow read: if isReadAuthorized(resource);
        allow create, update, delete: if isCompanyAdmin(request.resource.data.companyId) || isSuperAdmin();
    }
    
    match /profileChangeRequests/{requestId} {
        allow read: if isReadAuthorized(resource);
        allow create: if isCompanyMember(request.resource.data.companyId) && request.auth.uid == request.resource.data.technicianId;
        allow update: if isCompanyAdmin(resource.data.companyId) || isSuperAdmin();
    }
    
    match /chatMessages/{messageId} {
        allow read, create: if isCompanyMember(request.resource.data.companyId) || isSuperAdmin();
    }
  }
}
