
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSuperAdmin() {
      return request.auth.token.role == 'superAdmin';
    }

    function isAdmin() {
      return request.auth.token.role == 'admin' || isSuperAdmin();
    }
    
    function isTechnician() {
      return request.auth.token.role == 'technician';
    }
    
    function isCompanyMember(companyId) {
      return request.auth.token.companyId == companyId;
    }
    
    function isOwner(uid) {
        return request.auth.uid == uid;
    }

    // Companies: Only readable by members, only updatable by company owner or admin
    match /companies/{companyId} {
      allow read: if isCompanyMember(companyId);
      allow update: if isCompanyMember(companyId) && (isOwner(resource.data.ownerId) || isAdmin());
      // Disallow create/delete from client
      allow create, delete: if false;
    }

    // Users: Can read/update their own profile. Admins can read all profiles in their company.
    match /users/{userId} {
      allow read: if isOwner(userId) || (isAdmin() && isCompanyMember(resource.data.companyId));
      allow update: if isOwner(userId);
      // Create is handled by a Cloud Function upon user signup
      allow create: if request.auth != null;
      allow delete: if false;
    }
    
    // Invitations: Admins can manage invites for their own company.
    match /invitations/{inviteId} {
      allow read, create: if isAdmin() && isCompanyMember(request.resource.data.companyId);
      allow update: if isCompanyMember(request.resource.data.companyId); // For accepting invites
      allow delete: if isAdmin() && isCompanyMember(resource.data.companyId);
    }

    // --- Artifacts ---
    // All data within an app's artifact collection is protected by the companyId check.
    match /artifacts/{appId}/public/data/{collection}/{docId} {
        // Default deny all
        allow read, write: if false;
    }

    // Jobs
    match /artifacts/{appId}/public/data/jobs/{jobId} {
      allow read: if isCompanyMember(resource.data.companyId);
      // Admins/CSRs can create. Technicians can update (e.g. status), but not create.
      allow create: if isCompanyMember(request.resource.data.companyId) && (isAdmin() || request.auth.token.role == 'csr');
      allow update: if isCompanyMember(resource.data.companyId) && (isAdmin() || request.auth.token.role == 'csr' || isOwner(resource.data.assignedTechnicianId));
      allow delete: if isCompanyMember(resource.data.companyId) && isAdmin();
    }
    
    // Technicians
    match /artifacts/{appId}/public/data/technicians/{techId} {
        allow read: if isCompanyMember(resource.data.companyId);
        // Only admins can create/update technician profiles directly
        allow create, update: if isAdmin() && isCompanyMember(request.resource.data.companyId);
        // Deletion is handled by a server-side action when removing a user
        allow delete: if isAdmin() && isCompanyMember(resource.data.companyId);
    }

    // Skills
    match /artifacts/{appId}/public/data/skills/{skillId} {
        allow read: if request.auth != null; // All authenticated users can read skills
        allow create, delete: if isAdmin() && isCompanyMember(request.resource.data.companyId);
    }
    
    // Parts
    match /artifacts/{appId}/public/data/parts/{partId} {
        allow read: if request.auth != null; // All authenticated users can read parts
        allow create, delete: if isAdmin() && isCompanyMember(request.resource.data.companyId);
    }
    
    // Profile Change Requests
    match /artifacts/{appId}/public/data/profileChangeRequests/{reqId} {
        allow read: if isCompanyMember(resource.data.companyId);
        allow create: if isTechnician() && isCompanyMember(request.resource.data.companyId) && isOwner(request.resource.data.technicianId);
        allow update: if isAdmin() && isCompanyMember(resource.data.companyId);
        allow delete: if false;
    }
    
     // Chat Messages
    match /artifacts/{appId}/public/data/chatMessages/{msgId} {
        allow read: if isCompanyMember(resource.data.companyId);
        allow create: if isCompanyMember(request.resource.data.companyId) && (isOwner(request.resource.data.senderId));
        allow update, delete: if false;
    }
    
    // Contracts
    match /artifacts/{appId}/public/data/contracts/{contractId} {
        allow read: if isCompanyMember(resource.data.companyId);
        allow create, update, delete: if isAdmin() && isCompanyMember(request.resource.data.companyId);
    }
    
    // Customers
    match /artifacts/{appId}/public/data/customers/{customerId} {
        allow read: if isCompanyMember(resource.data.companyId);
        allow create, update: if isCompanyMember(request.resource.data.companyId);
        allow delete: if isAdmin() && isCompanyMember(resource.data.companyId);
    }
    
     // Equipment
    match /artifacts/{appId}/public/data/equipment/{equipId} {
        allow read: if isCompanyMember(resource.data.companyId);
        allow create, update, delete: if isCompanyMember(request.resource.data.companyId);
    }
    
  }
}
