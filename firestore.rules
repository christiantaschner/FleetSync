
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function getRole() {
      return request.auth.token.role;
    }

    function getCompanyId() {
      return request.auth.token.companyId;
    }

    function isSuperAdmin() {
      return isUserAuthenticated() && getRole() == 'superAdmin';
    }

    function isCompanyAdmin() {
      return isUserAuthenticated() && getRole() == 'admin';
    }
    
    function isCompanyTechnician() {
        return isUserAuthenticated() && getRole() == 'technician';
    }

    // Is the requesting user a member of the company that owns this resource?
    function isMemberOfCompany(companyId) {
      return getCompanyId() == companyId;
    }

    // Check if the incoming data has the correct companyId
    function isIncomingDataForOwnCompany() {
      return request.resource.data.companyId == getCompanyId();
    }
    
    // Check if existing resource belongs to user's company
    function isExistingResourceInOwnCompany() {
        return resource.data.companyId == getCompanyId();
    }


    // --- Top Level Collections ---

    // Users can read/write their own profile.
    match /users/{userId} {
      allow read, write: if isUserAuthenticated() && request.auth.uid == userId;
    }
    
    // Company document can be read by its members, updated by its admin.
    match /companies/{companyId} {
      allow read: if isUserAuthenticated() && isMemberOfCompany(companyId);
      allow write: if isCompanyAdmin() && isMemberOfCompany(companyId);
    }
    
    // --- App Data Collections (Nested under /artifacts/{appId}/public/data) ---
    
    // Default deny all to prevent accidentally open collections
    match /artifacts/{appId}/public/data/{document=**} {
      allow read, write: if false;
    }
    
    match /artifacts/{appId}/public/data/jobs/{jobId} {
        // Admins have full access to their company's jobs.
        // Technicians can read all jobs in their company, but can only update jobs assigned to them.
        allow read: if isUserAuthenticated() && isExistingResourceInOwnCompany();
        allow create: if isCompanyAdmin() && isIncomingDataForOwnCompany();
        allow update: if (isCompanyAdmin() && isExistingResourceInOwnCompany()) || 
                         (isCompanyTechnician() && isExistingResourceInOwnCompany() && resource.data.assignedTechnicianId == request.auth.uid);
        allow delete: if isCompanyAdmin() && isExistingResourceInOwnCompany();
    }
    
    match /artifacts/{appId}/public/data/technicians/{technicianId} {
        // All members can read technician data in their company.
        // Only admins can create/delete.
        // Admins or the technician themselves can update.
        allow read: if isUserAuthenticated() && isExistingResourceInOwnCompany();
        allow create: if isCompanyAdmin() && isIncomingDataForOwnCompany();
        allow update: if (isCompanyAdmin() || request.auth.uid == technicianId) && isExistingResourceInOwnCompany();
        allow delete: if isCompanyAdmin() && isExistingResourceInOwnCompany();
    }
    
    match /artifacts/{appId}/public/data/profileChangeRequests/{requestId} {
        // Admins can read/write all requests in their company.
        // Technicians can create requests for themselves, and read their own history.
        allow read: if (isCompanyAdmin() && isExistingResourceInOwnCompany()) ||
                       (isCompanyTechnician() && resource.data.technicianId == request.auth.uid);
        allow create: if isCompanyTechnician() && request.resource.data.technicianId == request.auth.uid && isIncomingDataForOwnCompany();
        allow update, delete: if isCompanyAdmin() && isExistingResourceInOwnCompany();
    }

    match /artifacts/{appId}/public/data/chatMessages/{messageId} {
        // Participants of a chat can read/write.
        // A "participant" is the sender or the receiver.
        function isParticipant() {
            return request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.receiverId;
        }
        allow read: if isUserAuthenticated() && isParticipant() && isExistingResourceInOwnCompany();
        allow create: if isUserAuthenticated() && request.resource.data.senderId == request.auth.uid && isIncomingDataForOwnCompany();
    }
    
    // Rule for simple collections that follow the standard pattern.
    match /artifacts/{appId}/public/data/{collection}/{docId}
        where collection in ['skills', 'parts', 'contracts', 'customers', 'equipment'] {
            // Read: any authenticated member of the company
            // Write: only admins of the company
            allow read: if isUserAuthenticated() && isExistingResourceInOwnCompany();
            allow create: if isCompanyAdmin() && isIncomingDataForOwnCompany();
            allow update, delete: if isCompanyAdmin() && isExistingResourceInOwnCompany();
    }
  }
}
