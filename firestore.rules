
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is an admin of the requested company
    function isAdmin(companyId) {
      return request.auth.token.companyId == companyId && request.auth.token.role == 'admin';
    }
    
    // Helper function to check if the user is a technician of the requested company
    function isTechnician(companyId) {
      return request.auth.token.companyId == companyId && request.auth.token.role == 'technician';
    }
    
    // Helper function to check if the user owns this document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- User and Company Management ---
    match /users/{userId} {
      // Only the user themselves or a superAdmin can read/write their own profile
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    match /companies/{companyId} {
      // Only an admin of that company can read/write
      allow read, write: if isAuthenticated() && isAdmin(companyId);
    }
    
    // --- Application Data ---
    // All application data is stored under an "artifacts" collection structure.
    // This allows for better separation and security rules.
    match /artifacts/{appId}/public/data/{collection}/{documentId} {
      // The most restrictive rule: by default, nobody can access anything.
      allow read, write: if false;
    }
    
    // --- Specific Collection Rules ---
    match /artifacts/{appId}/public/data/jobs/{jobId} {
      // Admins and technicians of the same company can read all jobs.
      allow read: if isAuthenticated() && (isAdmin(resource.data.companyId) || isTechnician(resource.data.companyId));
      
      // Admins can create/update jobs.
      // Technicians can update a job only if it's assigned to them.
      allow create, update: if isAuthenticated() && isAdmin(request.resource.data.companyId);
      allow update: if isAuthenticated() && isTechnician(request.resource.data.companyId) && request.resource.data.assignedTechnicianId == request.auth.uid;
      
      // Only admins can delete jobs.
      allow delete: if isAuthenticated() && isAdmin(resource.data.companyId);
    }
    
    match /artifacts/{appId}/public/data/technicians/{techId} {
        // Admins and technicians of the company can read all technician profiles.
        allow read: if isAuthenticated() && (isAdmin(resource.data.companyId) || isTechnician(resource.data.companyId));
        
        // Admins can update any technician profile.
        // A technician can only update their own profile.
        allow update: if isAuthenticated() && (isAdmin(request.resource.data.companyId) || isOwner(techId));
    }
    
    match /artifacts/{appId}/public/data/profileChangeRequests/{requestId} {
        // Admins can read all requests.
        // Technicians can only read requests they submitted.
        allow read: if isAuthenticated() && (isAdmin(resource.data.companyId) || (isTechnician(resource.data.companyId) && resource.data.technicianId == request.auth.uid));
        
        // Admins can approve/reject (update).
        // Technicians can only create new requests.
        allow create: if isAuthenticated() && isTechnician(request.resource.data.companyId) && request.resource.data.technicianId == request.auth.uid;
        allow update: if isAuthenticated() && isAdmin(request.resource.data.companyId);
    }

    match /artifacts/{appId}/public/data/{collection=**} {
        // More generic rule for other data collections (skills, parts, contracts, customers, equipment, chat)
        // Admins have full access.
        // Technicians can only read.
        allow read: if isAuthenticated() && (isAdmin(resource.data.companyId) || isTechnician(resource.data.companyId));
        allow write: if isAuthenticated() && isAdmin(request.resource.data.companyId);
    }
  }
}

    