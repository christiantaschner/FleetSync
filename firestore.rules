
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get the companyId from the user's profile document.
    // This is more secure than trusting the client and reduces read costs compared to multiple gets.
    function getUserCompanyId() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId;
    }

    // Helper function to get the user's role from their profile document.
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow a user to read their own profile.
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow a user to create their own profile.
      // This is handled by a server action upon first sign-up.
      allow create: if request.auth != null && request.auth.uid == userId;

      // **FIXED**: Allow a user to update their own profile, BUT NOT sensitive fields.
      allow update: if request.auth != null && request.auth.uid == userId
                       && request.resource.data.uid == resource.data.uid
                       && request.resource.data.email == resource.data.email
                       && request.resource.data.companyId == resource.data.companyId
                       && request.resource.data.role == resource.data.role;

      // Users cannot delete their own profiles. This should be an admin action.
      allow delete: if false;
    }

    // Rules for the 'companies' collection
    match /companies/{companyId} {
      // Allow any user from the company to read their own company document.
      allow read: if request.auth != null && getUserCompanyId() == companyId;

      // **FIXED**: ONLY allow users with the 'admin' role to write to the company document.
      allow write: if request.auth != null
                      && getUserCompanyId() == companyId
                      && getUserRole() == 'admin';
    }

    // Generic rules for all other company-specific collections like 'jobs', 'technicians', etc.
    // These collections must contain a 'companyId' field on every document.
    match /{collection}/{docId} {
      // To read or write, the user must be authenticated and their companyId must match the document's companyId.
      // The 'create' check ensures that a user cannot create a document for another company.
      // The 'update/delete' check ensures that a document's companyId cannot be changed.
      allow read: if request.auth != null && getUserCompanyId() == resource.data.companyId;
      allow write: if request.auth != null && getUserCompanyId() == request.resource.data.companyId
                      && (request.method == 'create' || getUserCompanyId() == resource.data.companyId);
    }
  }
}
