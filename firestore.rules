rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function getUserData(uid) {
      // It's safer to check for existence before accessing .data
      let userDoc = get(/databases/$(database)/documents/users/$(uid));
      if (userDoc.exists()) {
        return userDoc.data;
      }
      return null;
    }

    function isSuperAdmin(uid) {
      let userData = getUserData(uid);
      return userData != null && userData.role == 'super_admin';
    }

    function isCompanyAdmin(uid, companyId) {
      let userData = getUserData(uid);
      return userData != null && userData.role == 'admin' && userData.companyId == companyId;
    }

    function isCompanyMember(uid, companyId) {
      let userData = getUserData(uid);
      return userData != null && userData.companyId == companyId;
    }

    // SuperAdmins can do anything. This is a broad rule for development/support.
    match /{document=**} {
        allow read, write: if isSuperAdmin(request.auth.uid);
    }

    match /users/{userId} {
      // A user can read and update their own profile.
      // An admin can read/update users in their own company.
      allow read, update: if request.auth.uid == userId || isCompanyAdmin(request.auth.uid, getUserData(userId).companyId);
    }
    
    match /companies/{companyId} {
        // Any member of the company can read the company document.
        allow read: if isCompanyMember(request.auth.uid, companyId);
        // Only admins of that company can update it.
        allow update: if isCompanyAdmin(request.auth.uid, companyId);
    }
    
    match /profileChangeRequests/{reqId} {
        // Technicians can create their own requests for their own company
        allow create: if request.auth.uid == request.resource.data.technicianId 
                      && isCompanyMember(request.auth.uid, request.resource.data.companyId);
        // Admins can read and update requests for their company.
        allow read, update: if isCompanyAdmin(request.auth.uid, resource.data.companyId);
    }

    match /chatMessages/{msgId} {
        // Any member of the company can create or read chat messages for their company
        allow read, create: if isCompanyMember(request.auth.uid, resource.data.companyId);
    }
    
    // This rule covers jobs, technicians, skills, parts, contracts, equipment
    match /{collection}/{docId} {
        // Any member of a company can read that company's data.
        allow read: if resource.data.companyId != null && isCompanyMember(request.auth.uid, resource.data.companyId);
        // Only admins of that company can write to that company's data.
        allow write: if request.resource.data.companyId != null && isCompanyAdmin(request.auth.uid, request.resource.data.companyId);
    }
  }
}
