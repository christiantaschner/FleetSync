
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions to get data about the requesting user.
    // These require that the user can read their own document in `/users`.
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
        return request.auth.uid == userId;
    }
    
    function userRole() {
        return getUserData(request.auth.uid).role;
    }
    
    function userCompanyId() {
        return getUserData(request.auth.uid).companyId;
    }

    // --- Core Collections ---

    match /users/{userId} {
      // A user can get their own document. This is critical for other rules.
      allow get: if isSignedIn() && isOwner(userId);
      
      // An admin can read profiles of users in their own company.
      // This rule is more complex because list requires different logic from get.
      allow list: if isSignedIn() && userRole() == 'admin';
      allow get: if isSignedIn() && userRole() == 'admin' && userCompanyId() == resource.data.companyId;

      // A user can update their own profile.
      allow update: if isSignedIn() && isOwner(userId);
      
      // A user can create their own profile document (e.g., on first sign-in).
      allow create: if isSignedIn() && isOwner(userId);
    }

    match /companies/{companyId} {
      // A user can read their own company document.
      allow read: if isSignedIn() && userCompanyId() == companyId;
      
      // Only an admin can update their company document.
      allow update: if isSignedIn() && userRole() == 'admin' && userCompanyId() == companyId;
      
      // A new user can create a company during onboarding.
      allow create: if isSignedIn();
    }

    // --- Company-Scoped Data (Jobs, Technicians, etc.) ---
    // For these rules, we rely on the client always querying with `where("companyId", "==", user.companyId)`.
    
    match /jobs/{jobId} {
      // Any authenticated user in the company can read jobs.
      allow read: if isSignedIn() && userCompanyId() == resource.data.companyId;
      // Admins or CSRs can create jobs for their company.
      allow create: if isSignedIn() && (userRole() == 'admin' || userRole() == 'csr') && userCompanyId() == request.resource.data.companyId;
      // Admins can update any job, Technicians can update their assigned job.
      allow update: if isSignedIn() && ( (userRole() == 'admin' && userCompanyId() == resource.data.companyId) || (isOwner(resource.data.assignedTechnicianId)) );
    }

    match /technicians/{techId} {
      // Any authenticated user in the company can read technician data.
      allow read: if isSignedIn() && userCompanyId() == resource.data.companyId;
      // Only admins can create or update technicians.
      allow create, update: if isSignedIn() && userRole() == 'admin' && userCompanyId() == request.resource.data.companyId;
    }

    match /skills/{skillId} {
      // Anyone in the company can read the skills list.
      allow read: if isSignedIn() && userCompanyId() == resource.data.companyId;
      // Only admins can manage skills for their company.
      allow write: if isSignedIn() && userRole() == 'admin' && userCompanyId() == request.resource.data.companyId;
    }

    match /parts/{partId} {
      // Anyone in the company can read the parts list.
      allow read: if isSignedIn() && userCompanyId() == resource.data.companyId;
      // Only admins can manage parts for their company.
      allow write: if isSignedIn() && userRole() == 'admin' && userCompanyId() == request.resource.data.companyId;
    }
    
    match /profileChangeRequests/{reqId} {
        // Admins can read all requests in their company. Techs can read their own.
        allow read: if isSignedIn() && (userRole() == 'admin' && userCompanyId() == resource.data.companyId || isOwner(resource.data.technicianId));
        // A technician can create a request for themselves.
        allow create: if isSignedIn() && isOwner(request.resource.data.technicianId) && userCompanyId() == request.resource.data.companyId;
        // Only admins can approve/reject.
        allow update: if isSignedIn() && userRole() == 'admin' && userCompanyId() == resource.data.companyId;
    }

    match /chatMessages/{msgId} {
        // Any user in the company can read/write chat messages.
        allow read, write: if isSignedIn() && userCompanyId() == request.resource.data.companyId;
    }
    
    match /contracts/{contractId} {
        allow read: if isSignedIn() && userCompanyId() == resource.data.companyId;
        allow write: if isSignedIn() && userRole() == 'admin' && userCompanyId() == request.resource.data.companyId;
    }
    
    match /equipment/{equipId} {
        allow read: if isSignedIn() && userCompanyId() == resource.data.companyId;
        allow write: if isSignedIn() && userCompanyId() == request.resource.data.companyId;
    }
  }
}
