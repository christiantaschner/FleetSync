rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions (OPTIMIZED: Using Custom Claims) ---
    function isSignedIn() {
      return request.auth != null;
    }
    function getCompanyId() {
      return request.auth.token.companyId;
    }
    function getRole() {
      return request.auth.token.role;
    }
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    function isSuperAdmin() {
      return isSignedIn() && getRole() == 'superAdmin';
    }
    function isCompanyAdmin() {
      return isSignedIn() && getRole() == 'admin';
    }
    function isCompanyMember() {
      return isSignedIn() && getCompanyId() != null;
    }
    function isRole(role) {
      return isSignedIn() && getRole() == role;
    }

    // --- Collection-Specific Rules ---

    // USERS
    // Admins can manage users in their own company. Users can read/update their own profile (but not change role/company).
    match /users/{userId} {
      allow get: if isOwner(userId) || isSuperAdmin() || (isCompanyAdmin() && resource.data.companyId == getCompanyId());
      allow list: if isSuperAdmin() || isCompanyAdmin(); // Client query must filter by companyId
      allow create: if isOwner(userId);
      allow update: if
        // User can update their non-sensitive fields
        (isOwner(userId) && request.resource.data.role == resource.data.role && request.resource.data.companyId == resource.data.companyId) ||
        // Admin can update users in their company
        (isCompanyAdmin() && resource.data.companyId == getCompanyId()) ||
        isSuperAdmin();
    }

    // COMPANIES
    // Company members can read their company doc, admins can update it.
    match /companies/{companyId} {
      allow read: if isCompanyMember() && companyId == getCompanyId();
      allow update: if isCompanyAdmin() && companyId == getCompanyId();
      allow create, delete: if isSuperAdmin(); // Only super admins can create/delete companies post-onboarding
    }

    // JOBS
    // Staff can manage jobs, technicians can only update their assigned jobs.
    match /jobs/{jobId} {
      allow read, list: if isCompanyMember() && resource.data.companyId == getCompanyId();
      allow create: if isCompanyAdmin() || isRole('csr');
      allow update: if
        (request.resource.data.companyId == resource.data.companyId) && // companyId is immutable
        (
          (isCompanyAdmin() || isRole('csr')) ||
          (isRole('technician') && resource.data.assignedTechnicianId == request.auth.uid)
        );
      allow delete: if isCompanyAdmin();
    }

    // TECHNICIANS
    // Admins can manage technicians in their company.
    match /technicians/{techId} {
      allow read, list: if isCompanyMember() && resource.data.companyId == getCompanyId();
      allow create, update: if isCompanyAdmin() && request.resource.data.companyId == resource.data.companyId;
      allow delete: if isCompanyAdmin();
    }
    
    // SKILLS & PARTS
    // Admins manage the company's library of skills and parts.
    match /skills/{skillId} {
      allow read, list: if isCompanyMember() && resource.data.companyId == getCompanyId();
      allow create, delete: if isCompanyAdmin();
      allow update: if false; // Skills are simple documents, just delete and re-create.
    }
    match /parts/{partId} {
      allow read, list: if isCompanyMember() && resource.data.companyId == getCompanyId();
      allow create, delete: if isCompanyAdmin();
      allow update: if false;
    }
    
    // CONTRACTS & EQUIPMENT
    // Staff can manage contracts and equipment for their company.
    match /contracts/{contractId} {
      allow read, list: if isCompanyMember() && resource.data.companyId == getCompanyId();
      allow create: if isCompanyAdmin() || isRole('csr');
      allow update: if (isCompanyAdmin() || isRole('csr')) && request.resource.data.companyId == resource.data.companyId;
      allow delete: if isCompanyAdmin();
    }
    match /equipment/{equipmentId} {
      allow read, list: if isCompanyMember() && resource.data.companyId == getCompanyId();
      allow create: if isCompanyAdmin() || isRole('csr');
      allow update: if (isCompanyAdmin() || isRole('csr')) && request.resource.data.companyId == resource.data.companyId;
      allow delete: if isCompanyAdmin();
    }

    // PROFILE CHANGE REQUESTS
    // Technicians create their own requests, Admins approve/reject them.
    match /profileChangeRequests/{reqId} {
      allow read, list: if isCompanyMember() && resource.data.companyId == getCompanyId();
      allow create: if isRole('technician') && request.resource.data.technicianId == request.auth.uid;
      allow update: if isCompanyAdmin() && request.resource.data.companyId == resource.data.companyId;
      allow delete: if false;
    }
    
    // CHAT MESSAGES
    // All company members can read/write messages within their company.
    match /chatMessages/{msgId} {
      allow read, list: if isCompanyMember() && resource.data.companyId == getCompanyId();
      allow create: if isCompanyMember() && request.resource.data.companyId == getCompanyId();
      allow update, delete: if false; // Messages are immutable
    }
  }
}
