
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ---- Helper Functions ----
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function isUserAdmin() {
      return request.auth != null && getUserData().role == 'admin';
    }

    function userCompanyId() {
      return getUserData().companyId;
    }

    // ---- Collections Rules ----

    match /users/{userId} {
      allow read, create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId &&
                       request.resource.data.uid == resource.data.uid &&
                       request.resource.data.email == resource.data.email &&
                       request.resource.data.companyId == resource.data.companyId &&
                       request.resource.data.role == resource.data.role;
      allow delete: if false;
    }
    
    match /companies/{companyId} {
      // Any user in the company can read the company doc.
      allow read: if request.auth != null && userCompanyId() == companyId;
      // Only an admin of that company can write to it.
      allow write: if isUserAdmin() && userCompanyId() == companyId;
    }

    // Default rules for most company-scoped collections (technicians, jobs, skills, parts, etc.)
    match /{collection}/{docId} {
      // READ: 
      // Allows a read if the requesting user belongs to the same company as the document.
      // This rule works for collection queries as long as the client includes a `where("companyId", "==", ...)` clause.
      // Individual document reads are also covered.
      // Specific technician access (reading their own jobs/profile) is handled by client logic.
      allow read: if request.auth != null && userCompanyId() == resource.data.companyId;

      // WRITE: More restrictive.
      allow write: if request.auth != null &&
                      // Is the user an admin of their own company, and is the data for their company?
                      (isUserAdmin() && userCompanyId() == request.resource.data.companyId) ||
                      // Is it a tech updating their own job?
                      (collection == 'jobs' && request.auth.uid == resource.data.assignedTechnicianId) ||
                      // Is it a tech creating a profile change request for themself?
                      (collection == 'profileChangeRequests' && request.auth.uid == request.resource.data.technicianId && userCompanyId() == request.resource.data.companyId) ||
                       // Is it a user sending a chat message in their company?
                      (collection == 'chatMessages' && request.auth.uid == request.resource.data.senderId && userCompanyId() == request.resource.data.companyId);
    }
  }
}
